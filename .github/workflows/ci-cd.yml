# GitHub Actions Pipeline pour MiniBook API
# 🚀 Pipeline automatisé : Build → Test → Docker → Deploy

name: 🚀 MiniBook CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "9.0.x"
  DOCKER_IMAGE_NAME: minibook-api

jobs:
  # 🏗️ JOB 1: BUILD & TEST
  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest

    # Tests unitaires isolés - pas besoin de DB

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 📦 Restore Dependencies
        run: |
          echo "🔄 Restauration des packages NuGet..."
          cd MiniBook
          dotnet restore

      - name: 🏗️ Build Application
        run: |
          echo "🔨 Compilation en mode Release..."
          cd MiniBook
          dotnet build --configuration Release --no-restore

      # Tests unitaires n'ont pas besoin d'attendre

      - name: 🧪 Run Unit Tests
        run: |
          echo "🧪 Exécution des tests unitaires..."
          cd MiniBook.Tests
          dotnet test --configuration Release --logger trx --results-directory TestResults/

      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: MiniBook.Tests/TestResults/

  # 🐳 JOB 2: DOCKER BUILD
  docker-build:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔨 Build Docker Image (Test Only)
        uses: docker/build-push-action@v5
        with:
          context: ./MiniBook
          file: ./MiniBook/Dockerfile
          push: false
          tags: minibook-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
