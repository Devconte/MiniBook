# Docker Compose - Production
# ðŸŽ¯ Configuration optimisÃ©e pour la production

services:
  # Base de donnÃ©es SQL Server Production
  sql-prod:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: minibook-sql-prod
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "${SQL_SA_PASSWORD}" # Ã€ dÃ©finir dans les variables d'environnement
      MSSQL_PID: "Express" # Version Express gratuite
    ports:
      - "1433:1433"
    volumes:
      - sql_data_prod:/var/opt/mssql
      - ./sql-backups:/var/opt/backups
    networks:
      - minibook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "sleep 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Application MiniBook Production
  minibook-api-prod:
    image: "${DOCKER_IMAGE_TAG:-minibook-api:latest}"
    container_name: minibook-api-prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Default=Server=sql-prod,1433;Database=MiniBookProd;User Id=sa;Password=${SQL_SA_PASSWORD};TrustServerCertificate=True
      - Logging__LogLevel__Default=Warning
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
    ports:
      - "5000:8080"
    depends_on:
      sql-prod:
        condition: service_healthy
    networks:
      - minibook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/posts || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

  # Reverse Proxy Nginx (optionnel)
  nginx:
    image: nginx:alpine
    container_name: minibook-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - minibook-api-prod
    networks:
      - minibook-network
    restart: unless-stopped

volumes:
  sql_data_prod:
    driver: local

networks:
  minibook-network:
    driver: bridge
